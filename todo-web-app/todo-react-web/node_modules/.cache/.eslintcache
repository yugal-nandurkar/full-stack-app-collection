[{"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\index.js":"1","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\App.js":"2","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\reportWebVitals.js":"3","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\TodoApp.jsx":"4","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\LogoutComponent.jsx":"5","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\ErrorComponent.jsx":"6","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\ListTodosComponent.jsx":"7","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\HeaderComponent.jsx":"8","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\LoginComponent.jsx":"9","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\WelcomeComponent.jsx":"10","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\TodoComponent.jsx":"11","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\security\\AuthContext.js":"12","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\api\\TodoApiService.js":"13","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\api\\ApiClient.js":"14","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\api\\HelloWorldApiService.js":"15","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\api\\AuthenticationApiService.js":"16"},{"size":583,"mtime":1732166088901,"results":"17","hashOfConfig":"18"},{"size":599,"mtime":1732166088991,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1732166088853,"results":"20","hashOfConfig":"18"},{"size":2266,"mtime":1732166089151,"results":"21","hashOfConfig":"18"},{"size":277,"mtime":1732166089165,"results":"22","hashOfConfig":"18"},{"size":299,"mtime":1732166089130,"results":"23","hashOfConfig":"18"},{"size":3244,"mtime":1732166089054,"results":"24","hashOfConfig":"18"},{"size":2098,"mtime":1732181065764,"results":"25","hashOfConfig":"18"},{"size":1709,"mtime":1732181065764,"results":"26","hashOfConfig":"18"},{"size":1406,"mtime":1732166089033,"results":"27","hashOfConfig":"18"},{"size":4077,"mtime":1732166089116,"results":"28","hashOfConfig":"18"},{"size":3161,"mtime":1732181065778,"results":"29","hashOfConfig":"18"},{"size":568,"mtime":1732166089262,"results":"30","hashOfConfig":"18"},{"size":122,"mtime":1732166089207,"results":"31","hashOfConfig":"18"},{"size":558,"mtime":1732170049471,"results":"32","hashOfConfig":"18"},{"size":351,"mtime":1732166089242,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"w5s9ja",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"37"},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","suppressedMessages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"82","messages":"83","suppressedMessages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\index.js",[],[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\App.js",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\TodoApp.jsx",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\LogoutComponent.jsx",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\ErrorComponent.jsx",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\ListTodosComponent.jsx",["85","86"],[],"import { useEffect, useState } from \"react\"\nimport {useNavigate} from 'react-router-dom'\nimport { retrieveAllTodosForUsernameApi, deleteTodoApi } from \"./api/TodoApiService\"\nimport { useAuth } from \"./security/AuthContext\"\n\nfunction ListTodosComponent() {\n\n    const today = new Date()\n\n    const authContext = useAuth()\n\n    const username = authContext.username\n\n    const navigate = useNavigate()\n    \n    const targetDate = new Date(today.getFullYear()+12, today.getMonth(), today.getDay())\n\n    const [todos,setTodos] = useState([])\n\n    const [message,setMessage] = useState(null)\n    \n    useEffect ( () => refreshTodos(), [])\n\n    function refreshTodos() {\n        \n        retrieveAllTodosForUsernameApi(username)\n        .then(response => {\n            setTodos(response.data)\n        }\n            \n        )\n        .catch(error => console.log(error))\n    \n    }\n\n    function deleteTodo(id) {\n        console.log('clicked ' + id)\n        deleteTodoApi(username, id)\n        .then(\n\n            () => {\n                setMessage(`Delete of todos with id = ${id} successful`)\n                refreshTodos()\n            }\n            //1: Display message\n            //2: Update Todos list\n        )\n        .catch(error => console.log(error))\n    }\n\n    function updateTodo(id) {\n        console.log('clicked ' + id)\n        navigate(`/todo/${id}`)\n    }\n\n    function addNewTodo() {\n        navigate(`/todo/-1`)\n    }\n\n    return (\n        <div className=\"container\">\n            <h1>Things You Want To Do!</h1>\n            \n            {message && <div className=\"alert alert-warning\">{message}</div>}\n\n            \n            <div>\n                <table className=\"table\">\n                    <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Is Done?</th>\n                                <th>Target Date</th>\n                                <th>Delete</th>\n                                <th>Update</th>\n                            </tr>\n                    </thead>\n                    <tbody>\n                    {\n                        todos.map(\n                            todo => (\n                                <tr key={todo.id}>\n                                    <td>{todo.description}</td>\n                                    <td>{todo.done.toString()}</td>\n                                    {/* <td>{todo.targetDate.toDateString()}</td> */}\n                                    <td>{todo.targetDate.toString()}</td>\n                                    <td> <button className=\"btn btn-warning\" \n                                                    onClick={() => deleteTodo(todo.id)}>Delete</button> </td>\n                                    <td> <button className=\"btn btn-success\" \n                                                    onClick={() => updateTodo(todo.id)}>Update</button> </td>\n                                </tr>\n                            )\n                        )\n                    }\n                    </tbody>\n\n                </table>\n            </div>\n            <div className=\"btn btn-success m-5\" onClick={addNewTodo}>Add New Todo</div>\n        </div>\n    )\n}\n\nexport default ListTodosComponent","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\HeaderComponent.jsx",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\LoginComponent.jsx",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\WelcomeComponent.jsx",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\TodoComponent.jsx",["87","88","89","90"],[],"import { useEffect, useState } from 'react'\nimport {useParams, useNavigate} from 'react-router-dom'\nimport { retrieveTodoApi, updateTodoApi, createTodoApi } from './api/TodoApiService'\nimport { useAuth } from './security/AuthContext'\nimport {Formik, Form, Field, ErrorMessage} from 'formik'\nimport moment from 'moment'\n\nexport default function TodoComponent() {\n    \n    const {id} = useParams()\n    \n    const[description, setDescription] = useState('')\n    const[targetDate, setTargetDate] = useState('')\n\n    const authContext = useAuth()\n    const navigate = useNavigate()\n    \n    const username = authContext.username\n    \n    useEffect(\n        () => retrieveTodos(),\n        [id]\n        )\n\n    function retrieveTodos(){\n        if(id != -1) {\n            retrieveTodoApi(username, id)\n            .then(response => {\n                setDescription(response.data.description)\n                setTargetDate(response.data.targetDate)\n            })\n            .catch(error => console.log(error))\n        }\n    }\n\n    function onSubmit(values) {\n        console.log(values)\n        \n        const todo = {\n            id: id,\n            username: username,\n            description: values.description,\n            targetDate: values.targetDate,\n            done: false\n        }\n\n        console.log(todo)\n\n        if(id==-1) {\n            createTodoApi(username, todo)\n            .then(response => {\n                navigate('/todos')\n            })\n            .catch(error => console.log(error))\n    \n        } else {\n            updateTodoApi(username, id, todo)\n            .then(response => {\n                navigate('/todos')\n            })\n            .catch(error => console.log(error))\n        }\n    }\n\n    function validate(values) {\n        let errors = {\n            // description: 'Enter a valid description',\n            // targetDate: 'Enter a valid target date'\n        }\n\n        if(values.description.length<5) {\n            errors.description = 'Enter atleast 5 characters'\n        }\n\n        if(values.targetDate == null || values.targetDate=='' || !moment(values.targetDate).isValid()) {\n            errors.targetDate = 'Enter a target date'\n        }\n\n        console.log(values)\n        return errors\n    }\n\n    return (\n        <div className=\"container\">\n            <h1>Enter Todo Details </h1>\n            <div>\n                <Formik initialValues={ { description, targetDate } } \n                    enableReinitialize = {true}\n                    onSubmit = {onSubmit}\n                    validate = {validate}\n                    validateOnChange = {false}\n                    validateOnBlur = {false}\n                >\n                {\n                    (props) => (\n                        <Form>\n                            <ErrorMessage \n                                name=\"description\"\n                                component=\"div\"\n                                className = \"alert alert-warning\"\n                            />\n                            \n                            <ErrorMessage \n                                name=\"targetDate\"\n                                component=\"div\"\n                                className = \"alert alert-warning\"\n                            />\n\n                            <fieldset className=\"form-group\">\n                                <label>Description</label>\n                                <Field type=\"text\" className=\"form-control\" name=\"description\" />\n                            </fieldset>\n                            <fieldset className=\"form-group\">\n                                <label>Target Date</label>\n                                <Field type=\"date\" className=\"form-control\" name=\"targetDate\"/>\n                            </fieldset>\n                            <div>\n                                <button className=\"btn btn-success m-5\" type=\"submit\">Save</button>\n                            </div>\n                        </Form>\n                    )\n                }\n                </Formik>\n            </div>\n\n        </div>\n    )\n}","C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\security\\AuthContext.js",["91"],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\api\\TodoApiService.js",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\api\\ApiClient.js",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\api\\HelloWorldApiService.js",[],[],"C:\\Users\\desk\\Documents\\Projects\\test\\01-frontend\\todo-app\\src\\components\\todo\\api\\AuthenticationApiService.js",[],[],{"ruleId":"92","severity":1,"message":"93","line":16,"column":11,"nodeType":"94","messageId":"95","endLine":16,"endColumn":21},{"ruleId":"96","severity":1,"message":"97","line":22,"column":39,"nodeType":"98","endLine":22,"endColumn":41,"suggestions":"99"},{"ruleId":"96","severity":1,"message":"100","line":22,"column":9,"nodeType":"98","endLine":22,"endColumn":13,"suggestions":"101"},{"ruleId":"102","severity":1,"message":"103","line":26,"column":15,"nodeType":"104","messageId":"105","endLine":26,"endColumn":17},{"ruleId":"102","severity":1,"message":"106","line":49,"column":14,"nodeType":"104","messageId":"105","endLine":49,"endColumn":16},{"ruleId":"102","severity":1,"message":"106","line":75,"column":58,"nodeType":"104","messageId":"105","endLine":75,"endColumn":60},{"ruleId":"102","severity":1,"message":"106","line":71,"column":31,"nodeType":"104","messageId":"105","endLine":71,"endColumn":33},"no-unused-vars","'targetDate' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'refreshTodos'. Either include it or remove the dependency array.","ArrayExpression",["107"],"React Hook useEffect has a missing dependency: 'retrieveTodos'. Either include it or remove the dependency array.",["108"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.",{"desc":"109","fix":"110"},{"desc":"111","fix":"112"},"Update the dependencies array to be: [refreshTodos]",{"range":"113","text":"114"},"Update the dependencies array to be: [id, retrieveTodos]",{"range":"115","text":"116"},[630,632],"[refreshTodos]",[683,687],"[id, retrieveTodos]"]